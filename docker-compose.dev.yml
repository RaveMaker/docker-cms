version: '3.7'

services:
  cms:
    image: cms
    build:
      context: build-cms
    privileged: true
    command: cms
    ports:
    - 8888:8888
    - 8889:8889
    networks:
      - frontend
      - backend
    volumes:
      - ./config/cms.conf:/config/cms.conf
      - ./config/isolate.conf:/usr/local/etc/isolate
      - ./logs:/var/local/log/cms
      - ./cms:/cms
    restart: always
    depends_on:
      - cms_db
    environment:
      CMS_CONFIG: /config/cms.conf
    # Deploy block for docker swarm mode only - ignored by docker-compose
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  rws:
    image: cms:latest
    command: rws
    depends_on:
      - cms
    ports:
    - 8890:8890
    networks:
      - frontend
    volumes:
      - ./config/cms.ranking.conf:/usr/local/etc/cms.ranking.conf
      - ./logs:/var/local/log/cms
      - ./ranking:/var/local/lib/cms/ranking
      - ./cms:/cms
    restart: always
    # Deploy block for docker swarm mode only - ignored by docker-compose
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  cms_db:
    image: postgres
    restart: always
    networks:
      - backend
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${dbName}
      POSTGRES_USER: ${dbUser}
      POSTGRES_PASSWORD: ${dbPass}
    # Deploy block for docker swarm mode only - ignored by docker-compose
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

networks:
  frontend:
  backend:
